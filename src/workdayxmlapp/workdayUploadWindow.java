/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package workdayxmlapp;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import java.sql.*;
//import org.apache.commons.codec.binary.Base64;

/**
 *
 * @author Carl.Harvey
 */
public class workdayUploadWindow extends javax.swing.JFrame {
    static private final String newline = "\n";
    /**
     * Creates new form workdayUploadWindow
     */
    public workdayUploadWindow() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
        logs.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        newFileNameTextF = new javax.swing.JTextField();
        browseSingleFilebutton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        logScrollPane = new javax.swing.JScrollPane();
        logs = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        newDirectoryNameTextF = new javax.swing.JTextField();
        startDirectoryConversion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Full Directory Conversion");

        browseSingleFilebutton.setText("Browse");
        browseSingleFilebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseSingleFilebuttonActionPerformed(evt);
            }
        });

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        logs.setColumns(20);
        logs.setRows(5);
        logScrollPane.setViewportView(logs);

        jLabel2.setText("Single File Conversion");

        startDirectoryConversion.setText("Start");
        startDirectoryConversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startDirectoryConversionActionPerformed(evt);
            }
        });

        jLabel3.setText("Logs");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addComponent(logScrollPane, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(newFileNameTextF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(browseSingleFilebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(newDirectoryNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, 551, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(startDirectoryConversion, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newFileNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browseSingleFilebutton))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newDirectoryNameTextF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startDirectoryConversion))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(logScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exitButton))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("Logs");
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Exit");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");

        jMenuItem2.setText("Help");
        jMenu2.add(jMenuItem2);

        jMenuItem4.setText("About");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    File fileName;
    private void browseSingleFilebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseSingleFilebuttonActionPerformed
        JFileChooser browse = new JFileChooser();
        browse.showOpenDialog(null);
        File newFile = browse.getSelectedFile();
//        String fileName2 = newFile.getName();
//        String newFileName = newFile.getAbsolutePath();
//        newFileNameTextF.setText(fileName2);
//        logs.append(newFileName + "\n" + fileName2 + "\n");
        //System.out.println("\n" + newFile + " is the filepath");
        //System.out.println("\n" + fileName2 + " is the fileName attach");
        //encodeFileToBase64Binary(newFile);
        encoderTest(newFile);
        catcher(newFile);
    }//GEN-LAST:event_browseSingleFilebuttonActionPerformed
    //fileName = newFile;
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
//        if (evt.getSource() == exitButton) {
//            logs.append("Closing Application");
//        }
//        System.out.println("exiting app");
//        try {
//            Thread.sleep(2000);
//        } catch (InterruptedException ex) {
//            Logger.getLogger(workdayUploadWindow.class.getName()).log(Level.SEVERE, null, ex);
//        }
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void startDirectoryConversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startDirectoryConversionActionPerformed
        String directory = newDirectoryNameTextF.getText();
        File[] files = new File(directory).listFiles();
        showFiles(files);
    }//GEN-LAST:event_startDirectoryConversionActionPerformed

    public File catcher(File newFile){
        //fileCaught = fileName;
        //System.out.println(fileCaught + " caught");
        String fileName2 = newFile.getName();
        String newFileName = newFile.getAbsolutePath();
        newFileNameTextF.setText(fileName2);
        logs.append(newFileName + "\n" + fileName2 + "\n");
        //encoderTest(newFile);
        return newFile;
         
    }
        private String encoderTest(File file){
        //byte[] bytes = new byte[(int)file.length()];
//        File[] files = new File("C:\\Users\\carl.harvey\\Desktop\\File conversion BH\\britehouse_docs").listFiles();
//        showFiles(files);
        byte[] bytes = null;
        try {
            bytes = loadFile(file);
        } catch (IOException ex) {
            Logger.getLogger(workdayUploadWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
        String fileName2 = file.getName();
        String newFileName = file.getAbsolutePath();
        //System.out.println(newFileName + "unedited");
        //sSource = sSource.replace("\\/", "/");
        newFileName = newFileName.replace("\\", "\\\\");
        //System.out.println(newFileName + "edited");
        String encodedfile2 = Base64.getEncoder().encodeToString(bytes);
        //logs.append(newline + encodedfile2 + newline + newFileNameTextF.getText());
        String stmt2 = "INSERT INTO hua_file_base64 (original_file_name, base64_string, original_file_directory, date_converted)" +
                      "VALUES ('" + fileName2 + "', '" + encodedfile2 + "', '" + newFileName + "', SYSDATE());";
        mysqlCon(stmt2);
        return encodedfile2;
        
    }
    
    public void mysqlCon(String stmt2){
        try{
        Class.forName("com.mysql.jdbc.Driver");
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/prague","root","root"); 
        //Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/workdayprod2","root","root"); 
        Statement stmt = con.createStatement();
        stmt.executeUpdate(stmt2);
//        while(rs.next()){
//            System.out.println(rs.getString(1)); //check this!
//        }
        con.close();
        }catch(SQLException e){
            e.printStackTrace();
            logs.append("Error: " + e + "\n");
        }catch(ClassNotFoundException ex){
            ex.printStackTrace();
            logs.append("Error: " + ex + "\n");
        }
        
    }
    
//    public static void main(String... args) {
//        File[] files = new File("C:/").listFiles();
//        showFiles(files);
//    }

    public void showFiles(File[] files) {
        for (File file : files) {
            if (file.isDirectory()) {
                logs.append("Directory: " + file.getName() + "\n");
                showFiles(file.listFiles()); // Calls same method again.
            } else {
                System.out.println("File: " + file.getName() + "\n");
                logs.append("File: " + file.getName() + "\n");
                encoderTest(file);
            }
        }
    }
    
    private static byte[] loadFile(File file) throws IOException {
	    InputStream is = new FileInputStream(file);

	    long length = file.length();
	    if (length > Integer.MAX_VALUE) {
	        // File is too large
	    }
	    byte[] bytes = new byte[(int)length];
	    
	    int offset = 0;
	    int numRead = 0;
	    while (offset < bytes.length
	           && (numRead=is.read(bytes, offset, bytes.length-offset)) >= 0) {
	        offset += numRead;
	    }

	    if (offset < bytes.length) {
	        throw new IOException("Could not completely read file "+file.getName());
                //logs.append("Could not completely read file "+file.getName());
	    }

	    is.close();
	    return bytes;
	}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(workdayUploadWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(workdayUploadWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(workdayUploadWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(workdayUploadWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new workdayUploadWindow().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseSingleFilebutton;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JScrollPane logScrollPane;
    private javax.swing.JTextArea logs;
    private javax.swing.JTextField newDirectoryNameTextF;
    private javax.swing.JTextField newFileNameTextF;
    private javax.swing.JButton startDirectoryConversion;
    // End of variables declaration//GEN-END:variables
}
